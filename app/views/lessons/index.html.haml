%section.section
  %h1.is-size-2 Hello how are you?
%section.section
  %table.table.is-fullwidth
    %thead
      %th Name
      %th Code
      %th Ects
      %th Semester
      %th Grade
    %tbody
    - Lesson.all.group_by(&:semester).each do |sem|
      %thead
        %th.has-text-centered{ colspan: '5'} Semester #{sem[0]}
      - sem[1].each do |les|
        %tr
          %td= les.name
          %td= les.code
          %td= les.ects
          %td= les.semester
          %td= les.grade
      %thead
        %th
        %th
        %th= Lesson.where(semester: sem[0], grade: [5..10]).sum(:ects)
        %th
        %th= Lesson.where(semester: sem[0], grade: [5..10]).average(:grade).to_s.first(4)
    %thead
      %th Summary
      %th  -
      %th= Lesson.sum(:ects)
      %th  -
      %th= Lesson.average(:grade).to_s.first(4)
%section.section
  %div.tile.is-vertical.is-ancestor
    %div.tile.is-vertical.is-5
      %div.tile
        %div.tile.is-parent.is-vertical
          %article.tile.is-child.notification.is-primary
            %p.title Your average is:
            %p.subtitle= avg_calc.nil? ? 'add some passed lessons':avg_calc.to_s.first(4)
          %article.tile.is-child.notification.is-info
            %p.subtitle Total Classes #{Lesson.count} (#{Lesson.where(grade: [5..10]).count}/#{Lesson.where(grade: [0..4]).count})
            %p.subtitle Obligatory Classes #{Lesson.where(ltype: 1).count}
            %p.subtitle Basic Classes #{Lesson.where(ltype: 2).count}
            %p.subtitle General Classes #{Lesson.where(ltype: 3).count}
            %p.subtitle Special Classes #{Lesson.where(ltype: 4).count}
        %div.tile.is-parent
          %article.tile.is-child.notification.is-success
            %p.title Graduation?
            %p.subtitle= Lesson.thesis?
            %p.subtitle= Lesson.no_thesis?
